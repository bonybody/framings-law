/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/rooms/": {
    /**
     * ルームの作成 
     * @description 新しくゲームのルームを作成する。
     */
    post: operations["post-rooms"];
  };
  "/rooms/{roomId}/joins": {
    get: operations["get-rooms-roomId-join"];
    /** ルームに参加 */
    post: operations["post-rooms-roomId-join"];
    parameters: {
      path: {
        roomId: string;
      };
    };
  };
  "/rooms/{roomId}/readies": {
    get: operations["get-rooms-roomId-ready"];
    post: operations["post-rooms-roomId-ready"];
    parameters: {
      path: {
        roomId: string;
      };
    };
  };
  "/rooms/{roomId}/users": {
    /** Your GET endpoint */
    get: operations["get-rooms-roomId-users"];
    parameters: {
      path: {
        roomId: string;
      };
    };
  };
  "/games/": {
    /**
     * Create Game 
     * @description 新しくゲームを作成する。
     */
    post: operations["post-games"];
  };
  "/games/{gameId}": {
    /**
     * 特定のゲームの状態を取得する 
     * @description {gameId}で指定されたゲームの状態を取得する。
     */
    get: operations["get-games-gameId"];
    parameters: {
      path: {
        gameId: string;
      };
    };
  };
  "/games/{gameId}/cards": {
    /**
     * ゲーム内の投稿一覧取得 
     * @description {gameId}で指定されたゲーム内の投稿を一覧取得する。
     * 削除された投稿は除外して取得する。
     */
    get: operations["get-games-gameId-posts"];
    parameters: {
      path: {
        gameId: string;
      };
    };
  };
  "/games/{gameId}/players": {
    /** Your GET endpoint */
    get: operations["get-games-gameId-users"];
    parameters: {
      path: {
        gameId: string;
      };
    };
  };
  "/games/{gameId}/players/{playerId}": {
    /** Your GET endpoint */
    get: operations["get-games-gameId-players-playerId"];
    parameters: {
      path: {
        gameId: string;
        playerId: string;
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** Room */
    Room: {
      id?: string;
      hostUserId?: string;
      cardCount?: number;
      debateSeconds?: number;
      key?: string;
      status?: {
        id?: string;
        code?: string;
      };
    };
    /** RoomUser */
    RoomUsers: {
      join?: (string)[];
      ready?: (string)[];
    };
    /** RoomJoinUsers */
    RoomJoinUsers: {
      users?: (string)[];
    };
    /** RoomReadyUsers */
    RoomReadyUsers: {
      users?: (string)[];
    };
    /** GamePlayer */
    GamePlayer: {
      id?: string;
      userId?: string;
      gameId?: string;
      isFramer?: boolean;
      character?: {
        id?: string;
        displayName?: string;
        imageUrl?: string;
      };
    };
  };
  responses: {
    /** @description Example response */
    CreateRoomResponse: {
      content: {
        "application/json": {
          id?: string;
          hostUserId?: string;
          roomStatusId?: string;
          roomKey?: string;
          cardCount?: number;
          debateSeconds?: number;
        };
      };
    };
  };
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {

  "post-rooms": {
    /**
     * ルームの作成 
     * @description 新しくゲームのルームを作成する。
     */
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Room"];
        };
      };
    };
  };
  "get-rooms-roomId-join": {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["RoomJoinUsers"];
        };
      };
    };
  };
  "post-rooms-roomId-join": {
    /** ルームに参加 */
    responses: {
      /** @description OK */
      200: {
        headers: {
        };
        content: {
          "application/json": components["schemas"]["RoomJoinUsers"];
        };
      };
    };
  };
  "get-rooms-roomId-ready": {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["RoomReadyUsers"];
        };
      };
    };
  };
  "post-rooms-roomId-ready": {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["RoomReadyUsers"];
        };
      };
    };
  };
  "get-rooms-roomId-users": {
    /** Your GET endpoint */
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["RoomUsers"];
        };
      };
    };
  };
  "post-games": {
    /**
     * Create Game 
     * @description 新しくゲームを作成する。
     */
    requestBody?: {
      content: {
        "application/json": {
          roomId?: string;
        };
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "application/json": {
            id?: string;
          };
        };
      };
    };
  };
  "get-games-gameId": {
    /**
     * 特定のゲームの状態を取得する 
     * @description {gameId}で指定されたゲームの状態を取得する。
     */
    responses: {
    };
  };
  "get-games-gameId-posts": {
    /**
     * ゲーム内の投稿一覧取得 
     * @description {gameId}で指定されたゲーム内の投稿を一覧取得する。
     * 削除された投稿は除外して取得する。
     */
    responses: {
    };
  };
  "get-games-gameId-users": {
    /** Your GET endpoint */
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            players?: (components["schemas"]["GamePlayer"])[];
          };
        };
      };
    };
  };
  "get-games-gameId-players-playerId": {
    /** Your GET endpoint */
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            player?: components["schemas"]["GamePlayer"];
          };
        };
      };
    };
  };
}
